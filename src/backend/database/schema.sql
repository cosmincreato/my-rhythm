CREATE TABLE IF NOT EXISTS USERS (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS PERFORMERS (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    type VARCHAR(10) NOT NULL CHECK (type IN ('artist', 'band'))
);


CREATE TABLE IF NOT EXISTS SONGS (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    genre VARCHAR(50) NOT NULL,
    duration_in_seconds INTEGER NOT NULL,
    performer_id INTEGER REFERENCES PERFORMERS(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS PLAYLISTS (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS BAND_MEMBERS (
    band_id INTEGER REFERENCES performers(id) ON DELETE CASCADE,
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY (band_id, name)
);


CREATE TABLE IF NOT EXISTS FAVORITE_PERFORMERS (
    user_id INTEGER REFERENCES USERS(id) ON DELETE CASCADE,
    performer_id INTEGER REFERENCES PERFORMERS(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, performer_id)
);

CREATE TABLE IF NOT EXISTS FAVORITE_SONGS (
    user_id INTEGER REFERENCES USERS(id) ON DELETE CASCADE,
    song_id INTEGER REFERENCES SONGS(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, song_id)
);


CREATE TABLE IF NOT EXISTS PLAYLIST_SONGS (
    playlist_id INTEGER REFERENCES PLAYLISTS(id) ON DELETE CASCADE,
    song_id INTEGER REFERENCES SONGS(id) ON DELETE CASCADE,
    PRIMARY KEY (playlist_id, song_id)
);